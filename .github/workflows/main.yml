name: Smart Release Manager

on:
  push:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: File validation
        run: |
          [ -f ./myproxy.txt ] || { echo "myproxy.txt missing"; exit 1; }
          [ -f ./mydirect.txt ] || { echo "mydirect.txt missing"; exit 1; }

      - name: Delete existing release (if any)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 删除与标签关联的旧发布
          if gh release view latest &> /dev/null; then
            gh release delete latest -y
            echo "Deleted existing release"
          fi

          # 强制更新标签
          git tag -f latest
          git push origin latest --force

      - name: Create/Overwrite Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          name: "Dynamic Release (${GITHUB_SHA:0:7})"
          body: |
            📅 Build Time: ${{ steps.date.outputs.timestamp }}
            📜 Commit: ${{ github.event.head_commit.message }}
          files: |
            myproxy.txt
            mydirect.txt
          replace_existing: true  # 关键覆盖参数
          generate_release_notes: true

      - name: Prune old releases
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 获取保留窗口（保留最新3个）
          keep_releases=3

          # 获取待删除的Release ID列表
          releases=$(gh api repos/${{ github.repository }}/releases \
            --jq "sort_by(.created_at) | reverse | .[$keep_releases:] | .[].id")

          # 批量删除
          echo "$releases" | while read id; do
            gh api repos/${{ github.repository }}/releases/$id -X DELETE
            echo "🚮 Deleted release ID: $id"
          done
