name: Dynamic Release Management

on:
  push:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      # 代码检出
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 文件验证
      - name: Validate TXT files
        run: |
          [ -f ./myproxy.txt ] || { echo "myproxy.txt missing"; exit 1; }
          [ -f ./mydirect.txt ] || { echo "mydirect.txt missing"; exit 1; }

      # 标签管理
      - name: Force update latest tag
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -f latest
          git push origin latest --force

      # 使用现代 Release Action
      - name: Create/Update Release
        uses: softprops/action-gh-release@v1
        id: release
        with:
          tag_name: latest
          name: "Release ${{ github.sha }}"
          body: |
            Updated at: ${{ github.event.head_commit.timestamp }}
            Commit Message: ${{ github.event.head_commit.message }}
          files: |
            myproxy.txt
            mydirect.txt

      # 旧 Release 清理
      - name: Cleanup old releases
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 安装依赖
          sudo apt-get install -y jq

          # 获取 releases 列表 (保留最新3个)
          releases=$(gh api repos/${{ github.repository }}/releases | jq -r '.[3:] | .[].id')

          # 删除旧 releases
          echo "$releases" | while read id; do
            gh api repos/${{ github.repository }}/releases/$id -X DELETE
            echo "Deleted release ID: $id"
          done
